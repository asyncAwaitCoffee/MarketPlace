CREATE OR ALTER PROCEDURE MARKET_PLACE.ITEMS_GET_BY_PAGE_WITH_FILTER
(
	@PAGE_NO INT = 1,
	@PAGE_COUNT INT = 10,
	@ITEM_CATEGORY TINYINT = NULL,
	@OWNER_ID INT,
	@FILTER_BY_OWNER_ID BIT = 0, -- 0 - except owner's items, 1 - only owner's items
	@HIGHEST_BIDDER INT = NULL,
	@ORDER_BY_PRICE_ASC BIT = 0,
	@ORDER_BY_PRICE_DESC BIT = 0,
	@ORDER_BY_DATE_ASC BIT = 0,
	@ORDER_BY_DATE_DESC BIT = 0
)
AS BEGIN

	SELECT
		ID,
		TITLE,
		ITEM_DESCRIPTION,
		ITEM_CATEGORY,
		START_PRICE,
		END_PRICE,
		CURRENT_PRICE,
		BID_STEP,
		DATE_START,
		DATE_END,
		HIGHEST_BIDDER,
		OWNER_ID
	FROM MARKET_PLACE.MARKET_ITEMS AS I
	WHERE
		(@FILTER_BY_OWNER_ID = 0 AND OWNER_ID <> @OWNER_ID) OR (@FILTER_BY_OWNER_ID = 1 AND OWNER_ID = @OWNER_ID)

END;
GO

CREATE OR ALTER PROCEDURE MARKET_PLACE.ORDER_ADD
(
	@USER_ID INT,
	@ITEM_ID INT,

	@ORDER_ID INT OUTPUT
)
AS BEGIN

	SELECT @ORDER_ID = NEXT VALUE FOR MARKET_PLACE.MARKET_ORDERS_SEQ

	INSERT INTO MARKET_PLACE.MARKET_ORDERS(ID, MARKET_USER_ID, MARKET_ITEM_ID)
	VALUES (@ORDER_ID, @USER_ID, @ITEM_ID)

END;
GO

CREATE OR ALTER PROCEDURE MARKET_PLACE.ITEM_ADD_TO_MARKET
(
	@TITLE NVARCHAR(20),
	@ITEM_DESCRIPTION NVARCHAR(200),
	@ITEM_CATEGORY TINYINT,
	@PRICE_START DECIMAL(20, 4),
	@PRICE_END DECIMAL(20, 4) = NULL,
	@BID_STEP DECIMAL(20, 4) = NULL,
	@DATE_END DATETIME = NULL,
	@OWNER_ID INT,

	@ITEM_ID INT OUTPUT
)
AS BEGIN

	SELECT @ITEM_ID = NEXT VALUE FOR MARKET_PLACE.MARKET_ITEMS_SEQ

	INSERT INTO MARKET_PLACE.MARKET_ITEMS (
		ID,
		TITLE,
		ITEM_DESCRIPTION,
		ITEM_CATEGORY,
		START_PRICE,
		END_PRICE,
		CURRENT_PRICE,
		BID_STEP,
		DATE_START,
		DATE_END,
		OWNER_ID)
     VALUES (
		@ITEM_ID,
		@TITLE,
		@ITEM_DESCRIPTION,
		@ITEM_CATEGORY,
		@PRICE_START,
		ISNULL(@PRICE_END, @PRICE_START),
		@PRICE_START,
		@BID_STEP,
		GETDATE(),
		@DATE_END,
		@OWNER_ID)

END;
GO

CREATE OR ALTER PROCEDURE MARKET_PLACE.ITEM_IMAGE_ADD
(
	@ITEM_ID INT,
	@IMAGE_BINARY VARBINARY(MAX)
)
AS BEGIN

	INSERT INTO MARKET_PLACE.ITEM_IMAGES (ITEM_ID, IMAGE_BINARY)
	VALUES (@ITEM_ID, @IMAGE_BINARY)

END;
GO

CREATE OR ALTER PROCEDURE MARKET_PLACE.ITEM_IMAGE_GET
(
	@ITEM_ID INT
)
AS BEGIN

	WAITFOR DELAY '00:00:01';
	SELECT IMAGE_BINARY FROM MARKET_PLACE.ITEM_IMAGES WHERE ITEM_ID = @ITEM_ID

END;
GO

CREATE OR ALTER PROCEDURE MARKET_PLACE.HISTORY_SAVE
(
	@MARKET_USER_ID INT,
	@MARKET_PARTNER_ID INT,
	@MARKET_ITEM_ID INT,
	@OPERATION_TYPE TINYINT,
	@COST DECIMAL(20, 4)
)
AS BEGIN

	INSERT INTO MARKET_PLACE.HISTORY(MARKET_USER_ID, MARKET_PARTNER_ID, MARKET_ITEM_ID, OPERATION_TYPE, COST)
	VALUES (@MARKET_USER_ID, @MARKET_PARTNER_ID, @MARKET_ITEM_ID, @OPERATION_TYPE, @COST)

END;
GO

CREATE OR ALTER PROCEDURE MARKET_PLACE.HISTORY_GET
(
	@MARKET_USER_ID INT
)
AS BEGIN

	SELECT
		H.MARKET_USER_ID,
		H.MARKET_PARTNER_ID,
		H.MARKET_ITEM_ID,
		H.OPERATION_TYPE,
		H.COST,
		H.HISTORY_DATE,
		O.ORDER_STATE
	FROM MARKET_PLACE.HISTORY AS H
		LEFT JOIN MARKET_PLACE.MARKET_ORDERS AS O
		ON O.MARKET_ITEM_ID = H.MARKET_ITEM_ID
	WHERE H.MARKET_USER_ID = @MARKET_USER_ID

END;
GO